[{"content":"","date":"22 January 2023","permalink":"/","section":"","summary":"","title":""},{"content":"","date":"22 January 2023","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"22 January 2023","permalink":"/tags/concepts/","section":"Tags","summary":"","title":"concepts"},{"content":"","date":"22 January 2023","permalink":"/tags/kubernetes/","section":"Tags","summary":"","title":"kubernetes"},{"content":"","date":"22 January 2023","permalink":"/categories/kubernetes/","section":"Categories","summary":"","title":"kubernetes"},{"content":"Kubernetes\u003e Kubernetes # Kubernetes is a widely used open-source container cluster management system for automating the deployment, scaling, and management of containerized applications. Initially developed by Google, it is now maintained by the Cloud Native Computing Foundation.\nKubernetes manages clusters of nodes, where each node is a computer or server that runs containers. Kubernetes uses a set of concepts such as pods, services, deployments, and ingresses to describe and manage applications in the cluster.\nPods are the basic units of deployment in Kubernetes. They group one or more containers that share the same namespace and resources, such as network ports and storage. Services are used to create a stable interface for accessing pods in the cluster, hiding the details of individual pod deployment. Deployments describe how pods should be deployed and managed using strategies such as horizontal scaling and live updates. Ingresses are used to manage access to the applications from outside the cluster.\nKubernetes also manages application configuration and secrets, as well as system resources such as storage volumes and networks. It supports service discovery to help applications find each other, as well as authentication and authorization plugins to manage access to resources in the cluster.\nIn summary, Kubernetes is a key tool for managing infrastructure for container-based applications. It provides a wealth of features to help development and operations teams deploy, manage, and maintain applications in a reliable and scalable manner.\n+------------------+ +------------------+ +------------------+ | | | | | | | Node | | Node | | Node | | | | | | | +------------------+ +------------------+ +------------------+ | | | | | | | | | +------------------+ +------------------+ +------------------+ | | | | | | | Kubelet | | Kubelet | | Kubelet | | | | | | | +------------------+ +------------------+ +------------------+ | | | | | | | | | +------------------+ +------------------+ +------------------+ | | | | | | | Container | | Container | | Container | | Runtime | | Runtime | | Runtime | +------------------+ +------------------+ +------------------+ This diagram shows a Kubernetes cluster with three nodes. Each node is a computer that runs a software called \u0026ldquo;Kubelet\u0026rdquo;, which manages the containers on that node. The containers are run by a container runtime, such as Docker.\nThe core of Kubernetes is a cluster controller called \u0026ldquo;API server\u0026rdquo; which exposes an API for describing the application deployments, services, storage volumes, etc. The information is stored in a distributed database called etcd. Other Kubernetes components, such as the scheduler and the controller, use this information to decide how to deploy the applications and handle errors.\n","date":"22 January 2023","permalink":"/posts/kubernetes/","section":"Posts","summary":"Kubernetes\u003e Kubernetes # Kubernetes is a widely used open-source container cluster management system for automating the deployment, scaling, and management of containerized applications. Initially developed by Google, it is now maintained by the Cloud Native Computing Foundation.","title":"Kubernetes"},{"content":"","date":"22 January 2023","permalink":"/categories/posts/","section":"Categories","summary":"","title":"posts"},{"content":"You might learn something out of this.\n","date":"22 January 2023","permalink":"/posts/","section":"Posts","summary":"You might learn something out of this.","title":"Posts"},{"content":"","date":"22 January 2023","permalink":"/tags/service-mesh/","section":"Tags","summary":"","title":"service mesh"},{"content":"Service Mesh\u003e Service Mesh # A service mesh is a set of features for communication between microservices in a distributed environment. It aims to simplify the management of network interactions between services and provide reliable service quality for applications.\nThe features of the service mesh typically include things such as caching, logging, metrics, security, and error management. They are implemented as edge proxies that run close to the applications and can be centrally managed. The edge proxies perform necessary tasks such as session management, error management, and metrics, and the applications are not affected by these tasks.\nThe service mesh is particularly useful for complex distributed applications that include many microservices. It allows development teams to delegate network interaction management to a central level, which helps them focus on developing their application\u0026rsquo;s functionality. In addition, service meshes are often compatible with container orchestrators such as Kubernetes, making their integration into an existing cluster easier.\nIn summary, a service mesh is a powerful tool for managing communication between microservices in a distributed environment. It provides a wealth of features to help development teams maintain reliable service quality for their applications, and it can easily be integrated into an existing cluster.\nIstio\u003e Istio # Istio Service Mesh is a set of features for Kubernetes that allow managing communication between microservices in a distributed environment. It is designed to simplify the management of network interactions between services and help development teams maintain reliable service quality for their applications.\nWith Istio Service Mesh, you can manage communication features such as caching, logging, telemetry, security, and error handling from a single place. Istio\u0026rsquo;s features are implemented as edge proxies (known as \u0026ldquo;envoy\u0026rdquo;) that run near the applications and can be managed centrally. The edge proxies perform necessary tasks such as session management, error handling, and telemetry, and the applications are not affected by these tasks.\nIstio Service Mesh is particularly useful for complex, distributed applications that include many microservices. It allows development teams to delegate network interaction management to a central level, helping them to focus on developing their applications\u0026rsquo; features. Additionally, Istio is compatible with Kubernetes and can be easily integrated into an existing cluster.\nIn summary, Istio Service Mesh is a powerful tool for managing communication between microservices in a Kubernetes environment. It provides an abundance of features to help development teams maintain reliable service quality for their applications and can be easily integrated into an existing cluster.\n","date":"22 January 2023","permalink":"/posts/servicemesh/","section":"Posts","summary":"Service Mesh\u003e Service Mesh # A service mesh is a set of features for communication between microservices in a distributed environment. It aims to simplify the management of network interactions between services and provide reliable service quality for applications.","title":"Service Mesh"},{"content":"","date":"22 January 2023","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"22 January 2023","permalink":"/tags/tech/","section":"Tags","summary":"","title":"tech"},{"content":"","date":"22 January 2023","permalink":"/categories/tech/","section":"Categories","summary":"","title":"tech"},{"content":"","date":"22 January 2023","permalink":"/tags/container/","section":"Tags","summary":"","title":"container"},{"content":"Containers\u003e Containers # Containers are a means of packaging and deploying applications in a portable and efficient manner. They allow for separating applications from host operating systems, enabling developers to create, test, and deploy applications faster and with greater reliability. Containers are also useful for operations, as they allow for managing and deploying applications in a more reproducible and scalable way.\nA container diagram can show how the different layers of an application are packaged within a container. The layers may include libraries, frameworks, and application code. The container is then deployed on a host operating system, which provides the necessary resources for the application to run within the container.\nDocker\u003e Docker # Docker is a popular tool for building, deploying, and running containers. It provides a user-friendly interface for managing containers, as well as pre-built container images for a large number of common applications. Docker uses a container image format called Docker Image, which can be shared among users to facilitate collaboration and code sharing.\nA Docker diagram can show how the different layers of a Docker image are built and how they are used to deploy containers. The diagram can show how Docker commands can be used to build a Docker image from a Dockerfile, how an image can be downloaded from a Docker repository, and how an image can be used to deploy a container.\nOCI\u003e OCI # The Open Container Initiative (OCI) is an open-technology consortium aimed at defining industry standards for containers. The OCI created the open container format called the OCI Container Image Format, which is a standard format for container images. This means that container images built for the OCI format can be used with any OCI-compatible tool, including Docker.\nAn OCI diagram can show how the OCI container format is used to define container images and how these images can be used with OCI-compatible tools such as Docker. The diagram can also show how the different components of the OCI work together to define industry standards for containers.\nIn summary, containers, Docker, and OCI are key technologies for modern application development and deployment. Containers allow developers to create applications faster and more reliably, while Docker provides a user-friendly interface for managing containers. The OCI is striving to define industry standards for containers to ensure compatibility and portability of container images.\n","date":"22 January 2023","permalink":"/posts/containers/","section":"Posts","summary":"Containers\u003e Containers # Containers are a means of packaging and deploying applications in a portable and efficient manner. They allow for separating applications from host operating systems, enabling developers to create, test, and deploy applications faster and with greater reliability.","title":"Containers, Docker, OCI"},{"content":"","date":"22 January 2023","permalink":"/tags/docker/","section":"Tags","summary":"","title":"docker"},{"content":"","date":"22 January 2023","permalink":"/tags/oci/","section":"Tags","summary":"","title":"oci"},{"content":"Here I should type some relevant infomations about myself\u0026hellip;\nSo I\u0026rsquo;m passionate about micro services architectures, containers and orchestration of those.\nI like automating most of tedious tasks when it comes to development of these types of systems as well.\nMy motto is to always keep it simple.\nI suppose redirecting to Github now might be the good thing to do so you could check out what\u0026rsquo;s up for me.\n","date":"22 January 2023","permalink":"/about/","section":"About","summary":"Here I should type some relevant infomations about myself\u0026hellip;\nSo I\u0026rsquo;m passionate about micro services architectures, containers and orchestration of those.\nI like automating most of tedious tasks when it comes to development of these types of systems as well.","title":"About"},{"content":" conventional commits ","date":"22 January 2023","permalink":"/links/links/","section":"Links","summary":" conventional commits ","title":"conventional commits"},{"content":"Some external links to useful stuff.\n","date":"22 January 2023","permalink":"/links/","section":"Links","summary":"Some external links to useful stuff.","title":"Links"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]